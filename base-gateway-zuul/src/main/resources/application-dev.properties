# 端口号
#server.port=80
#server.port=443
server.port=8089
server.servlet-path=/public-gateway

# 服务名
spring.application.name=base-gateway-zuul

# service-manage相关配置
zuul.routes.service-manage.path=/service-manage/**
zuul.routes.service-manage.serviceId=service-manage
# 开启指定路由的请求头信息，如Cookie,set-Cookie,Authorization
zuul.routes.service-manage.customSensitiveHeaders=true
zuul.routes.service-manage.retryable=true

# 设置连接超时时间
service-manage.ribbon.ConnectTimeout=30000
# 设置读取超时时间
service-manage.ribbon.ReadTimeout=60000
# 对所有操作请求都进行重试
service-manage.ribbon.OkToRetryOnAllOperations=true
# 切换实例的重试次数
service-manage.ribbon.MaxAutoRetriesNextServer=1
# 对当前实例的重试次数
service-manage.ribbon.MaxAutoRetries=1

# service-authorize相关配置
zuul.routes.service-authorize.path=/service-authorize/**
zuul.routes.service-authorize.serviceId=service-authorize

# 设置连接超时时间
service-authorize.ribbon.ConnectTimeout=30000
# 设置读取超时时间
service-authorize.ribbon.ReadTimeout=60000
# 对所有操作请求都进行重试
service-authorize.ribbon.OkToRetryOnAllOperations=true
# 切换实例的重试次数
service-authorize.ribbon.MaxAutoRetriesNextServer=1
# 对当前实例的重试次数
service-authorize.ribbon.MaxAutoRetries=1

# service-wechat相关配置
zuul.routes.service-wechat.path=/service-wechat/**
zuul.routes.service-wechat.serviceId=service-wechat

# 设置连接超时时间
service-wechat.ribbon.ConnectTimeout=30000
# 设置读取超时时间
service-wechat.ribbon.ReadTimeout=60000
# 对所有操作请求都进行重试
service-wechat.ribbon.OkToRetryOnAllOperations=true
# 切换实例的重试次数
service-wechat.ribbon.MaxAutoRetriesNextServer=1
# 对当前实例的重试次数
service-wechat.ribbon.MaxAutoRetries=1


#配置ID
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}

#注册到eureka中心
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8088/eureka/
# 心跳时间，即服务续约间隔时间（缺省为30s）
eureka.instance.lease-renewal-interval-in-seconds=5

# 发呆时间，即服务续约到期时间（缺省为90s）
eureka.instance.lease-expiration-duration-in-seconds=10

# 开启健康检查（依赖spring-boot-starter-actuator）
eureka.client.healthcheck.enabled=true

#ribbon,zuul,hystrix的超时设置(单位：ms)
#解决通过zuul重定向时跳转至实际服务ip的问题
zuul.add-host-header=true

#使用url配置的路由，传输超时时间，适用于ApacheHttpClient
zuul.host.socket-timeout-millis=60000
#使用url配置的路由，连接超时时间，适用于ApacheHttpClient
zuul.host.connect-timeout-millis=60000

#####全局相关配置#####
#对当前服务的重试次数
ribbon.MaxAutoRetries=0
# 传输超时时间
ribbon.ReadTimeout=600000
#对所有操作请求都进行重试,默认false
ribbon.OkToRetryOnAllOperations=false
# 连接超时时间
ribbon.ConnectTimeout=120000
#切换相同Server的次数
ribbon.MaxAutoRetriesNextServer=0

# 超时熔断的时间
hystrix.command.execution.isolation.thread.timeoutInMilliseconds=480000
# 设置为false则关闭熔断功能
hystrix.command.execution.timeout.enabled=false

#设置文件大小
spring.http.multipart.maxFileSize=30MB
spring.http.multipart.maxRequestSize=30MB