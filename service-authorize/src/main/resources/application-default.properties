#服务端口
server.port=8083

#访问根路径
#server.servlet-path=/service-bank

#eureka注册的服务名
#spring.application.name=service-authorize
#
##eureka服务注册地址
#eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8088/eureka/
#
##实例配置用IP地址
#eureka.instance.prefer-ip-address=true
#
## 心跳时间，即服务续约间隔时间（缺省为30s）
#eureka.instance.lease-renewal-interval-in-seconds=5
#
## 发呆时间，即服务续约到期时间（缺省为90s）
#eureka.instance.lease-expiration-duration-in-seconds=10
#
## 开启健康检查（依赖spring-boot-starter-actuator）
#eureka.client.healthcheck.enabled=true

#eureka注册的服务名
spring.application.name=service-authorize

#eureka服务注册地址
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8088/eureka/
#实例配置用IP地址
eureka.instance.prefer-ip-address=true

#设置实例的ID为ip:port
#eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}

# 心跳时间，即服务续约间隔时间（缺省为30s）
eureka.instance.lease-renewal-interval-in-seconds=5

# 发呆时间，即服务续约到期时间（缺省为90s）
eureka.instance.lease-expiration-duration-in-seconds=10

# 开启健康检查（依赖spring-boot-starter-actuator）
eureka.client.healthcheck.enabled=true


#kafka发送日志配置信息
##kakfa服务端地址
#kafka.producer.bootstrapServers=47.106.217.33:9092
#
##话题Topic
#kafka.producer.topic=fhjxTopic
#
##指定消费者组的名称
#kafka.producer.groupId=test_group
#
##消息发送失败重试次数
#kafka.producer.retries=0
#
##消息批量发送容量
#kafka.producer.batchSize=16384
#
##配置数据缓存的最大延迟时间,默认值0
#kafka.producer.lingerMs=5
#
##用于配置send数据或partitionFor函数得到对应的leader时，最大的等待时间，默认值为60秒
#kafka.producer.blockMs=5000
#
##用于配置socket请求的最大超时时间，客户端将重发请求;超过重试次数将抛异常,默认值为30秒
#kafka.producer.requestTimeoutMs=5000
#
##缓存容量
#kafka.producer.bufferMemory=33554432
#
##每次send的时候，立即去flush掉sending thread
#kafka.producer.autoFlush=true

#雪花算法  工作机器ID(0~31)
SnowFlakeIdGenerator.workerId=3
#雪花算法  数据中心ID(0~31)
SnowFlakeIdGenerator.datacenterId=3


# mybatis配置数据库，seal使用druid数据源连接池
spring.datasource.name=seal
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#开发
#spring.datasource.url=jdbc:mysql://47.106.218.194:3306/dealbank?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
#spring.datasource.username=dealbank
#spring.datasource.password=dealbank


#85
#spring.datasource.url=jdbc:mysql://10.101.7.85:3306/dealbank?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
#spring.datasource.username=root
#spring.datasource.password=spdb@1234

#生产
spring.datasource.url=jdbc:mysql://218.83.152.167:4012/wechat_pf?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.datasource.username=pfwx
spring.datasource.password=RQpux51GSrXNgKR2
#spring.datasource.url=jdbc:mysql://10.134.33.173:3306/speed4j?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
#spring.datasource.username=uapp
#spring.datasource.password=Uapp@_1234
#spring.datasource.name=ybt
##spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
##set databaseinformation
#spring.datasource.driverClassName = oracle.jdbc.OracleDriver
#spring.datasource.max-active=20
#spring.datasource.max-idle=8
#spring.datasource.min-idle=8
#spring.datasource.initial-size=10
#spring.datasource.url=jdbc:oracle:thin:@//47.106.218.194:1522/HELOWIN
#spring.datasource.username=CRM
#spring.datasource.password=123

# druid数据源连接池相关参数设置
# 初始化连接数，最小，最大连接数
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20

# 获取连接等待超时的时间
spring.datasource.maxWait=60000

# 间隔多久检测一次需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000

# 一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000

# 验证数据库连接的有效性
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true

# 指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false

# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20

# 监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j

#配置mybatis映射路径
#mybatis.mapper-locations=classpath:mapping/*.xml
#mybatis.mapper-locations=classpath*:mapping/*.xml
mybatis-plus.mapper-locations=classpath:/mapping/*.xml
mybatis.type-aliases-package=com.cloud.authorize.entity

#本地
# Redis 配置
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
#本地

##云服务
## Redis 配置
## Redis数据库索引（默认为0）
#spring.redis.database=9
## Redis服务器地址
#spring.redis.host=10.118.2.212
## Redis服务器连接端口
#spring.redis.port=6379
## Redis服务器连接密码（默认为空）
#spring.redis.password=5VeCKVs6IbkuztgevwRSSrvQGMvWvj7f
##云服务

## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=1
# 连接超时时间（毫秒）
spring.redis.timeout=3000

#pagehelper分页插件配置
pagehelper.helperDialect=mysql 
pagehelper.reasonable=true 
pagehelper.supportMethodsArguments=true 
pagehelper.params=count=countSql


spring.resources.static-locations=file:/data/k8s/pydx/web/html-downApp
#服务器地址
file.upload.path=/data/k8s/pydx/web/html-downApp/downApp

spring.http.multipart.enabled=true
spring.http.multipart.max-file-size=20MB
spring.http.multipart.max-request-size=1000MB

#访问微信端服务器
access.wechat.server=https://api.weixin.qq.com/sns/jscode2session?appid=

