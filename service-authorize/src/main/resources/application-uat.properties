#服务端口
server.port=8083
#eureka注册的服务名
spring.application.name=service-authorize
#eureka服务注册地址
eureka.client.serviceUrl.defaultZone=http://10.144.155.110:1111/eureka/
#实例配置用IP地址
eureka.instance.prefer-ip-address=true
#设置实例的ID为ip:port
#eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}
# 心跳时间，即服务续约间隔时间（缺省为30s）
eureka.instance.lease-renewal-interval-in-seconds=5
# 发呆时间，即服务续约到期时间（缺省为90s）
eureka.instance.lease-expiration-duration-in-seconds=10
# 开启健康检查（依赖spring-boot-starter-actuator）
eureka.client.healthcheck.enabled=true
#雪花算法  工作机器ID(0~31)
SnowFlakeIdGenerator.workerId=3
#雪花算法  数据中心ID(0~31)
SnowFlakeIdGenerator.datacenterId=3
# mybatis配置数据库，seal使用druid数据源连接池
spring.datasource.name=seal
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# uat
spring.datasource.url=jdbc:mysql://218.83.152.167:4012/wechat_pf?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.datasource.username=ENC(zq3kumf8wA9sPncChPXdNQ==)
spring.datasource.password=ENC(ClqbZSjm+zsSqDJbh4zM8N4WRcwIhfv0IDzvVbBbDcs=)
jasypt.encryptor.password=EbfYakiv73I2p0mXI50JMHoaxZTKJ7applet
# druid数据源连接池相关参数设置
# 初始化连接数，最小，最大连接数
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 获取连接等待超时的时间
spring.datasource.maxWait=60000
# 间隔多久检测一次需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 验证数据库连接的有效性
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
# 指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20
# 监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
#配置mybatis映射路径
#mybatis.mapper-locations=classpath*:mapping/*.xml
mybatis-plus.mapper-locations=classpath:/mapping/*.xml
mybatis.type-aliases-package=com.cloud.authorize.entity

# redis集群
spring.redis.database=0
spring.redis.password=INSS0420
#最大连接数据库连接数,设 0 为没有限制
spring.redis.jedis.pool.maxActive=50
#最大建立连接等待时间 如果超过此时间将接到异常 设为-1表示无限制  单位为 ms
spring.redis.jedis.pool.max-wait=5000
#最大最大空闲数,设 0 为没有限制
spring.redis.jedis.pool.max-Idle=5
#连接超时时间
spring.redis.timeout=10
#所有节点地址
spring.redis.cluster.nodes=10.144.107.31:5397,10.144.107.31:5398,10.144.107.32:5397,10.144.107.32:5398,10.144.107.33:5397,10.144.107.33:5398
#连接失败最大重连次数
spring.redis.cluster.max-redirects=5

#pagehelper分页插件配置
pagehelper.helperDialect=mysql 
pagehelper.reasonable=true 
pagehelper.supportMethodsArguments=true 
pagehelper.params=count=countSql
spring.resources.static-locations=file:/data/k8s/pydx/web/html-downApp
#服务器地址
file.upload.path=/data/k8s/pydx/web/html-downApp/downApp
spring.http.multipart.enabled=true
spring.http.multipart.max-file-size=20MB
spring.http.multipart.max-request-size=1000MB
#访问微信端服务器
access.wechat.server=https://api.weixin.qq.com/sns/jscode2session?appid=

