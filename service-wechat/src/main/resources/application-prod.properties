#服务端口
server.port=8082

#eureka注册的服务名
spring.application.name=service-wechat
#eureka服务注册地址
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8088/eureka/
#实例配置用IP地址
eureka.instance.prefer-ip-address=true
#设置实例的ID为ip:port
#eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}
# 心跳时间，即服务续约间隔时间（缺省为30s）
eureka.instance.lease-renewal-interval-in-seconds=5
# 发呆时间，即服务续约到期时间（缺省为90s）
eureka.instance.lease-expiration-duration-in-seconds=10
# 开启健康检查（依赖spring-boot-starter-actuator）
eureka.client.healthcheck.enabled=true

#zip file upload
#remote.ZIPUploadFile=D:/upload/
remote.ZIPUploadFile=/usr/local/javaApplication/ftp/appupload/
file.upload.path=/data/uploadedFile/
file.addressable.path=/data/uploadedFile/

sftp.host=120.78.80.44
sftp.port=22
sftp.username=pydx
sftp.password=puyin.UAT_server@61276677
sftp.path=/data/k8s/pydx/web

spring.servlet.multipart.max-file-size = 100Mb
spring.http.multipart.max-request-size=100Mb

#雪花算法  工作机器ID(0~31)
SnowFlakeIdGenerator.workerId=0
#雪花算法  数据中心ID(0~31)
SnowFlakeIdGenerator.datacenterId=0

## mybatis配置数据库，douke使用druid数据源连接池
spring.datasource.name=seal
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#开发
#生产
spring.datasource.url=jdbc:mysql://218.83.152.167:4012/wechat_pf?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.datasource.username=ENC(zq3kumf8wA9sPncChPXdNQ==)
spring.datasource.password=ENC(ClqbZSjm+zsSqDJbh4zM8N4WRcwIhfv0IDzvVbBbDcs=)

# druid数据源连接池相关参数设置
# 初始化连接数，最小，最大连接数
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 获取连接等待超时的时间
spring.datasource.maxWait=60000
# 间隔多久检测一次需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 验证数据库连接的有效性
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
# 指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20
# 监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
#配置mybatis映射路径
mybatis-plus.mapper-locations=classpath:/mapping/*.xml
#mybatis.mapper-locations=classpath:OracleMapping/*.xml
mybatis-plus.type-aliases-package=com.cloud.manage.entity
mybatis-plus.config-location=classpath:mybatis-config.xml

# Redis 配置
# Redis数据库索引（默认为0）
spring.redis.database=9
# Redis服务器地址
spring.redis.host=218.83.152.167
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=ENC(mKnMpNJZh2zvhf6THzD5tskGnoNeyiP2zqRyqICyTKbtxLBTJElJwvkPhtKuY12Q)
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=1
# 连接超时时间（毫秒）
spring.redis.timeout=3000

#pagehelper分页插件配置
pagehelper.helperDialect=mysql 
pagehelper.reasonable=true 
pagehelper.supportMethodsArguments=true 
pagehelper.params=count=countSql

logging.level.com.cloud.servicewechat.mapper=debug

objStorage.aws.accessKeyId=duixiang20210420
objStorage.aws.secretAccessKey=ENC(kQYp3BHIi6dNUZsLmqJkLPRjej/91l84KL6/hSi7qEovoToORo7v+7XvsR6y4jcTxMlpowegTPk=)
objStorage.aws.endpoint=http://10.112.41.250:9020
objStorage.aws.bucketName=duixiang20210420
objStorage.aws.region=us-east-1
objStorage.aws.baseUrl=http://duixiang20210420.hfdev_ns1.s3.cscbjecs.com:9020/

# intranet: 内网  extranet: 外网
deployment.scene.environment=extranet